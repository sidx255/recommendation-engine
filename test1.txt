The grep filter searches a file for a particular pattern of characters, and displays all lines that contain that pattern. The pattern that is searched in the file is referred to as the regular expression (grep stands for globally search for regular expression and print out). Syntax:  grep [options] pattern [files] Options Description
-c : This prints only a count of the lines that match a pattern
-h : Display the matched lines, but do not display the filenames.
-i : Ignores, case for matching
-l : Displays list of a filenames only.
-n : Display the matched lines and their line numbers.
-v : This prints out all the lines that do not matches the pattern
-e exp : Specifies expression with this option. Can use multiple times.
-f file : Takes patterns from file, one per line.
-E : Treats pattern as an extended regular expression (ERE)
-w : Match whole word
-o : Print only the matched parts of a matching line,
 with each such part on a separate output line.

-A n : Prints searched line and nlines after the result.
-B n : Prints searched line and n line before the result.
-C n : Prints searched line and n lines after before the result. Sample CommandsConsider the below file as an input.  $cat > geekfile.txt unix is great os. unix is opensource. unix is free os.
learn operating system.
Unix linux which one you choose.
uNix is easy to learn.unix is a multiuser os.Learn unix .unix is a powerful.1. Case insensitive search : The -i option enables to search for a string case insensitively in the give file. It matches the words like “UNIX”, “Unix”, “unix”.  $grep -i "UNix" geekfile.txtOutput:  unix is great os. unix is opensource. unix is free os.
Unix linux which one you choose.
uNix is easy to learn.unix is a multiuser os.Learn unix .unix is a powerful.2. Displaying the count of number of matches : We can find the number of lines that matches the given string/pattern  $grep -c "unix" geekfile.txtOutput:  23. Display the file names that matches the pattern : We can just display the files that contains the given string/pattern.  $grep -l "unix" *

or
 
$grep -l "unix" f1.txt f2.txt f3.xt f4.txtOutput:  geekfile.txt4. Checking for the whole words in a file : By default, grep matches the given string/pattern even if it found as a substring in a file. The -w option to grep makes it match only the whole words.  $ grep -w "unix" geekfile.txtOutput:  unix is great os. unix is opensource. unix is free os.
uNix is easy to learn.unix is a multiuser os.Learn unix .unix is a powerful.5. Displaying only the matched pattern : By default, grep displays the entire line which has the matched string. We can make the grep to display only the matched string by using the -o option.  $ grep -o "unix" geekfile.txtOutput:  unix
unix
unix
unix
unix
unix6. Show line number while displaying the output using grep -n : To show the line number of file with the line matched.  $ grep -n "unix" geekfile.txtOutput:  1:unix is great os. unix is opensource. unix is free os.
4:uNix is easy to learn.unix is a multiuser os.Learn unix .unix is a powerful.7. Inverting the pattern match : You can display the lines that are not matched with the specified search sting pattern using the -v option.  $ grep -v "unix" geekfile.txtOutput:  learn operating system.
Unix linux which one you choose.8. Matching the lines that start with a string : The ^ regular expression pattern specifies the start of a line. This can be used in grep to match the lines which start with the given string or pattern.  $ grep "^unix" geekfile.txtOutput:  unix is great os. unix is opensource. unix is free os.9. Matching the lines that end with a string : The $ regular expression pattern specifies the end of a line. This can be used in grep to match the lines which end with the given string or pattern.  $ grep "os$" geekfile.txt10.Specifies expression with -e option. Can use multiple times :  $grep â€“e "Agarwal" â€“e "Aggarwal" â€“e "Agrawal" geekfile.txt11. -f file option Takes patterns from file, one per line.  $cat pattern.txt

Agarwal
Aggarwal
Agrawal $grep â€“f pattern.txt  geekfile.txt12. Print n specific lines from a file:  -A prints the searched line and n lines after the result, -B prints the searched line and n lines before the result, and -C prints the searched line and n lines after and before the result. Syntax:$grep -A[NumberOfLines(n)] [search] [file]  

$grep -B[NumberOfLines(n)] [search] [file]  

$grep -C[NumberOfLines(n)] [search] [file]  Example:$grep -A1 learn geekfile.txtOutput:  learn operating system.    
Unix linux which one you choose. 
--
uNix is easy to learn.unix is a multiuser os.Learn unix .unix is a powerful.      

(Prints the searched line along with the next n lines (here n = 1 (A1).)
(Will print each and every occurance of the found line, separating each output by --) 
(Output pattern remains the same for -B and -C respectively)                                                                                                                                       Unix linux which one you choose.                                                                                                                                            --                                                                                                                                                                          uNix is easy to learn.unix is a multiuser os.Learn unix .unix is a powerful.                                                                                                                                                    Unix linux which one you choose.                                                                                                                                            --                                                                                                                                                                          uNix is easy to learn.unix is a multiuser os.Learn unix .unix is a powerful. This article is contributed by Akshay Rajput. If you like GeeksforGeeks and would like to contribute, you can also write an article using write.geeksforgeeks.org or mail your article to contribute@geeksforgeeks.org. See your article appearing on the GeeksforGeeks’ main page and help other Geeks. Please write comments if you find anything incorrect, or you want to share more information about the topic discussed above. My Personal Notes
arrow_drop_upSave Options Description
-c : This prints only a count of the lines that match a pattern
-h : Display the matched lines, but do not display the filenames.
-i : Ignores, case for matching
-l : Displays list of a filenames only.
-n : Display the matched lines and their line numbers.
-v : This prints out all the lines that do not matches the pattern
-e exp : Specifies expression with this option. Can use multiple times.
-f file : Takes patterns from file, one per line.
-E : Treats pattern as an extended regular expression (ERE)
-w : Match whole word
-o : Print only the matched parts of a matching line,
 with each such part on a separate output line.

-A n : Prints searched line and nlines after the result.
-B n : Prints searched line and n line before the result.
-C n : Prints searched line and n lines after before the result. Sample CommandsConsider the below file as an input.  $cat > geekfile.txt unix is great os. unix is opensource. unix is free os.
learn operating system.
Unix linux which one you choose.
uNix is easy to learn.unix is a multiuser os.Learn unix .unix is a powerful.1. Case insensitive search : The -i option enables to search for a string case insensitively in the give file. It matches the words like “UNIX”, “Unix”, “unix”.  $grep -i "UNix" geekfile.txtOutput:  unix is great os. unix is opensource. unix is free os.
Unix linux which one you choose.
uNix is easy to learn.unix is a multiuser os.Learn unix .unix is a powerful.2. Displaying the count of number of matches : We can find the number of lines that matches the given string/pattern  $grep -c "unix" geekfile.txtOutput:  23. Display the file names that matches the pattern : We can just display the files that contains the given string/pattern.  $grep -l "unix" *

or
 
$grep -l "unix" f1.txt f2.txt f3.xt f4.txtOutput:  geekfile.txt4. Checking for the whole words in a file : By default, grep matches the given string/pattern even if it found as a substring in a file. The -w option to grep makes it match only the whole words.  $ grep -w "unix" geekfile.txtOutput:  unix is great os. unix is opensource. unix is free os.
uNix is easy to learn.unix is a multiuser os.Learn unix .unix is a powerful.5. Displaying only the matched pattern : By default, grep displays the entire line which has the matched string. We can make the grep to display only the matched string by using the -o option.  $ grep -o "unix" geekfile.txtOutput:  unix
unix
unix
unix
unix
unix6. Show line number while displaying the output using grep -n : To show the line number of file with the line matched.  $ grep -n "unix" geekfile.txtOutput:  1:unix is great os. unix is opensource. unix is free os.
4:uNix is easy to learn.unix is a multiuser os.Learn unix .unix is a powerful.7. Inverting the pattern match : You can display the lines that are not matched with the specified search sting pattern using the -v option.  $ grep -v "unix" geekfile.txtOutput:  learn operating system.
Unix linux which one you choose.8. Matching the lines that start with a string : The ^ regular expression pattern specifies the start of a line. This can be used in grep to match the lines which start with the given string or pattern.  $ grep "^unix" geekfile.txtOutput:  unix is great os. unix is opensource. unix is free os.9. Matching the lines that end with a string : The $ regular expression pattern specifies the end of a line. This can be used in grep to match the lines which end with the given string or pattern.  $ grep "os$" geekfile.txt10.Specifies expression with -e option. Can use multiple times :  $grep â€“e "Agarwal" â€“e "Aggarwal" â€“e "Agrawal" geekfile.txt11. -f file option Takes patterns from file, one per line.  $cat pattern.txt

Agarwal
Aggarwal
Agrawal $grep â€“f pattern.txt  geekfile.txt12. Print n specific lines from a file:  -A prints the searched line and n lines after the result, -B prints the searched line and n lines before the result, and -C prints the searched line and n lines after and before the result. Syntax:$grep -A[NumberOfLines(n)] [search] [file]  

$grep -B[NumberOfLines(n)] [search] [file]  

$grep -C[NumberOfLines(n)] [search] [file]  Example:$grep -A1 learn geekfile.txtOutput:  learn operating system.    
Unix linux which one you choose. 
--
uNix is easy to learn.unix is a multiuser os.Learn unix .unix is a powerful.      

(Prints the searched line along with the next n lines (here n = 1 (A1).)
(Will print each and every occurance of the found line, separating each output by --) 
(Output pattern remains the same for -B and -C respectively)                                                                                                                                       Unix linux which one you choose.                                                                                                                                            --                                                                                                                                                                          uNix is easy to learn.unix is a multiuser os.Learn unix .unix is a powerful.                                                                                                                                                    Unix linux which one you choose.                                                                                                                                            --                                                                                                                                                                          uNix is easy to learn.unix is a multiuser os.Learn unix .unix is a powerful. This article is contributed by Akshay Rajput. If you like GeeksforGeeks and would like to contribute, you can also write an article using write.geeksforgeeks.org or mail your article to contribute@geeksforgeeks.org. See your article appearing on the GeeksforGeeks’ main page and help other Geeks. Please write comments if you find anything incorrect, or you want to share more information about the topic discussed above. My Personal Notes
arrow_drop_upSave Sample CommandsConsider the below file as an input.  $cat > geekfile.txt unix is great os. unix is opensource. unix is free os.
learn operating system.
Unix linux which one you choose.
uNix is easy to learn.unix is a multiuser os.Learn unix .unix is a powerful.1. Case insensitive search : The -i option enables to search for a string case insensitively in the give file. It matches the words like “UNIX”, “Unix”, “unix”.  $grep -i "UNix" geekfile.txtOutput:  unix is great os. unix is opensource. unix is free os.
Unix linux which one you choose.
uNix is easy to learn.unix is a multiuser os.Learn unix .unix is a powerful.2. Displaying the count of number of matches : We can find the number of lines that matches the given string/pattern  $grep -c "unix" geekfile.txtOutput:  23. Display the file names that matches the pattern : We can just display the files that contains the given string/pattern.  $grep -l "unix" *

or
 
$grep -l "unix" f1.txt f2.txt f3.xt f4.txtOutput:  geekfile.txt4. Checking for the whole words in a file : By default, grep matches the given string/pattern even if it found as a substring in a file. The -w option to grep makes it match only the whole words.  $ grep -w "unix" geekfile.txtOutput:  unix is great os. unix is opensource. unix is free os.
uNix is easy to learn.unix is a multiuser os.Learn unix .unix is a powerful.5. Displaying only the matched pattern : By default, grep displays the entire line which has the matched string. We can make the grep to display only the matched string by using the -o option.  $ grep -o "unix" geekfile.txtOutput:  unix
unix
unix
unix
unix
unix6. Show line number while displaying the output using grep -n : To show the line number of file with the line matched.  $ grep -n "unix" geekfile.txtOutput:  1:unix is great os. unix is opensource. unix is free os.
4:uNix is easy to learn.unix is a multiuser os.Learn unix .unix is a powerful.7. Inverting the pattern match : You can display the lines that are not matched with the specified search sting pattern using the -v option.  $ grep -v "unix" geekfile.txtOutput:  learn operating system.
Unix linux which one you choose.8. Matching the lines that start with a string : The ^ regular expression pattern specifies the start of a line. This can be used in grep to match the lines which start with the given string or pattern.  $ grep "^unix" geekfile.txtOutput:  unix is great os. unix is opensource. unix is free os.9. Matching the lines that end with a string : The $ regular expression pattern specifies the end of a line. This can be used in grep to match the lines which end with the given string or pattern.  $ grep "os$" geekfile.txt10.Specifies expression with -e option. Can use multiple times :  $grep â€“e "Agarwal" â€“e "Aggarwal" â€“e "Agrawal" geekfile.txt11. -f file option Takes patterns from file, one per line.  $cat pattern.txt

Agarwal
Aggarwal
Agrawal $grep â€“f pattern.txt  geekfile.txt12. Print n specific lines from a file:  -A prints the searched line and n lines after the result, -B prints the searched line and n lines before the result, and -C prints the searched line and n lines after and before the result. Syntax:$grep -A[NumberOfLines(n)] [search] [file]  

$grep -B[NumberOfLines(n)] [search] [file]  

$grep -C[NumberOfLines(n)] [search] [file]  Example:$grep -A1 learn geekfile.txtOutput:  learn operating system.    
Unix linux which one you choose. 
--
uNix is easy to learn.unix is a multiuser os.Learn unix .unix is a powerful.      

(Prints the searched line along with the next n lines (here n = 1 (A1).)
(Will print each and every occurance of the found line, separating each output by --) 
(Output pattern remains the same for -B and -C respectively)                                                                                                                                       Unix linux which one you choose.                                                                                                                                            --                                                                                                                                                                          uNix is easy to learn.unix is a multiuser os.Learn unix .unix is a powerful.                                                                                                                                                    Unix linux which one you choose.                                                                                                                                            --                                                                                                                                                                          uNix is easy to learn.unix is a multiuser os.Learn unix .unix is a powerful. This article is contributed by Akshay Rajput. If you like GeeksforGeeks and would like to contribute, you can also write an article using write.geeksforgeeks.org or mail your article to contribute@geeksforgeeks.org. See your article appearing on the GeeksforGeeks’ main page and help other Geeks. Please write comments if you find anything incorrect, or you want to share more information about the topic discussed above. My Personal Notes
arrow_drop_upSaveSample CommandsConsider the below file as an input.  $cat > geekfile.txt unix is great os. unix is opensource. unix is free os.
learn operating system.
Unix linux which one you choose.
uNix is easy to learn.unix is a multiuser os.Learn unix .unix is a powerful.1. Case insensitive search : The -i option enables to search for a string case insensitively in the give file. It matches the words like “UNIX”, “Unix”, “unix”.  $grep -i "UNix" geekfile.txtOutput:  unix is great os. unix is opensource. unix is free os.
Unix linux which one you choose.
uNix is easy to learn.unix is a multiuser os.Learn unix .unix is a powerful.2. Displaying the count of number of matches : We can find the number of lines that matches the given string/pattern  $grep -c "unix" geekfile.txtOutput:  23. Display the file names that matches the pattern : We can just display the files that contains the given string/pattern.  $grep -l "unix" *

or
 
$grep -l "unix" f1.txt f2.txt f3.xt f4.txtOutput:  geekfile.txt4. Checking for the whole words in a file : By default, grep matches the given string/pattern even if it found as a substring in a file. The -w option to grep makes it match only the whole words.  $ grep -w "unix" geekfile.txtOutput:  unix is great os. unix is opensource. unix is free os.
uNix is easy to learn.unix is a multiuser os.Learn unix .unix is a powerful.5. Displaying only the matched pattern : By default, grep displays the entire line which has the matched string. We can make the grep to display only the matched string by using the -o option.  $ grep -o "unix" geekfile.txtOutput:  unix
unix
unix
unix
unix
unix6. Show line number while displaying the output using grep -n : To show the line number of file with the line matched.  $ grep -n "unix" geekfile.txtOutput:  1:unix is great os. unix is opensource. unix is free os.
4:uNix is easy to learn.unix is a multiuser os.Learn unix .unix is a powerful.7. Inverting the pattern match : You can display the lines that are not matched with the specified search sting pattern using the -v option.  $ grep -v "unix" geekfile.txtOutput:  learn operating system.
Unix linux which one you choose.8. Matching the lines that start with a string : The ^ regular expression pattern specifies the start of a line. This can be used in grep to match the lines which start with the given string or pattern.  $ grep "^unix" geekfile.txtOutput:  unix is great os. unix is opensource. unix is free os.9. Matching the lines that end with a string : The $ regular expression pattern specifies the end of a line. This can be used in grep to match the lines which end with the given string or pattern.  $ grep "os$" geekfile.txt10.Specifies expression with -e option. Can use multiple times :  $grep â€“e "Agarwal" â€“e "Aggarwal" â€“e "Agrawal" geekfile.txt11. -f file option Takes patterns from file, one per line.  $cat pattern.txt

Agarwal
Aggarwal
Agrawal $grep â€“f pattern.txt  geekfile.txt12. Print n specific lines from a file:  -A prints the searched line and n lines after the result, -B prints the searched line and n lines before the result, and -C prints the searched line and n lines after and before the result. Syntax:$grep -A[NumberOfLines(n)] [search] [file]  

$grep -B[NumberOfLines(n)] [search] [file]  

$grep -C[NumberOfLines(n)] [search] [file]  Example:$grep -A1 learn geekfile.txtOutput:  learn operating system.    
Unix linux which one you choose. 
--
uNix is easy to learn.unix is a multiuser os.Learn unix .unix is a powerful.      

(Prints the searched line along with the next n lines (here n = 1 (A1).)
(Will print each and every occurance of the found line, separating each output by --) 
(Output pattern remains the same for -B and -C respectively)                                                                                                                                       Unix linux which one you choose.                                                                                                                                            --                                                                                                                                                                          uNix is easy to learn.unix is a multiuser os.Learn unix .unix is a powerful.                                                                                                                                                    Unix linux which one you choose.                                                                                                                                            --                                                                                                                                                                          uNix is easy to learn.unix is a multiuser os.Learn unix .unix is a powerful. This article is contributed by Akshay Rajput. If you like GeeksforGeeks and would like to contribute, you can also write an article using write.geeksforgeeks.org or mail your article to contribute@geeksforgeeks.org. See your article appearing on the GeeksforGeeks’ main page and help other Geeks. Please write comments if you find anything incorrect, or you want to share more information about the topic discussed above. My Personal Notes
arrow_drop_upSaveConsider the below file as an input.   unix is great os. unix is opensource. unix is free os.
learn operating system.
Unix linux which one you choose.
uNix is easy to learn.unix is a multiuser os.Learn unix .unix is a powerful.1. Case insensitive search : The -i option enables to search for a string case insensitively in the give file. It matches the words like “UNIX”, “Unix”, “unix”.  $grep -i "UNix" geekfile.txtOutput:  unix is great os. unix is opensource. unix is free os.
Unix linux which one you choose.
uNix is easy to learn.unix is a multiuser os.Learn unix .unix is a powerful.2. Displaying the count of number of matches : We can find the number of lines that matches the given string/pattern  $grep -c "unix" geekfile.txtOutput:  23. Display the file names that matches the pattern : We can just display the files that contains the given string/pattern.  $grep -l "unix" *

or
 
$grep -l "unix" f1.txt f2.txt f3.xt f4.txtOutput:  geekfile.txt4. Checking for the whole words in a file : By default, grep matches the given string/pattern even if it found as a substring in a file. The -w option to grep makes it match only the whole words.  $ grep -w "unix" geekfile.txtOutput:  unix is great os. unix is opensource. unix is free os.
uNix is easy to learn.unix is a multiuser os.Learn unix .unix is a powerful.5. Displaying only the matched pattern : By default, grep displays the entire line which has the matched string. We can make the grep to display only the matched string by using the -o option.  $ grep -o "unix" geekfile.txtOutput:  unix
unix
unix
unix
unix
unix6. Show line number while displaying the output using grep -n : To show the line number of file with the line matched.  $ grep -n "unix" geekfile.txtOutput:  1:unix is great os. unix is opensource. unix is free os.
4:uNix is easy to learn.unix is a multiuser os.Learn unix .unix is a powerful.7. Inverting the pattern match : You can display the lines that are not matched with the specified search sting pattern using the -v option.  $ grep -v "unix" geekfile.txtOutput:  learn operating system.
Unix linux which one you choose.8. Matching the lines that start with a string : The ^ regular expression pattern specifies the start of a line. This can be used in grep to match the lines which start with the given string or pattern.  $ grep "^unix" geekfile.txtOutput:  unix is great os. unix is opensource. unix is free os.9. Matching the lines that end with a string : The $ regular expression pattern specifies the end of a line. This can be used in grep to match the lines which end with the given string or pattern.  $ grep "os$" geekfile.txt10.Specifies expression with -e option. Can use multiple times :  $grep â€“e "Agarwal" â€“e "Aggarwal" â€“e "Agrawal" geekfile.txt11. -f file option Takes patterns from file, one per line.  $cat pattern.txt

Agarwal
Aggarwal
Agrawal $grep â€“f pattern.txt  geekfile.txt12. Print n specific lines from a file:  -A prints the searched line and n lines after the result, -B prints the searched line and n lines before the result, and -C prints the searched line and n lines after and before the result. Syntax:$grep -A[NumberOfLines(n)] [search] [file]  

$grep -B[NumberOfLines(n)] [search] [file]  

$grep -C[NumberOfLines(n)] [search] [file]  Example:$grep -A1 learn geekfile.txtOutput:  learn operating system.    
Unix linux which one you choose. 
--
uNix is easy to learn.unix is a multiuser os.Learn unix .unix is a powerful.      

(Prints the searched line along with the next n lines (here n = 1 (A1).)
(Will print each and every occurance of the found line, separating each output by --) 
(Output pattern remains the same for -B and -C respectively)                                                                                                                                       Unix linux which one you choose.                                                                                                                                            --                                                                                                                                                                          uNix is easy to learn.unix is a multiuser os.Learn unix .unix is a powerful.                                                                                                                                                    Unix linux which one you choose.                                                                                                                                            --                                                                                                                                                                          uNix is easy to learn.unix is a multiuser os.Learn unix .unix is a powerful. This article is contributed by Akshay Rajput. If you like GeeksforGeeks and would like to contribute, you can also write an article using write.geeksforgeeks.org or mail your article to contribute@geeksforgeeks.org. See your article appearing on the GeeksforGeeks’ main page and help other Geeks. Please write comments if you find anything incorrect, or you want to share more information about the topic discussed above. My Personal Notes
arrow_drop_upSave1. Case insensitive search : The -i option enables to search for a string case insensitively in the give file. It matches the words like “UNIX”, “Unix”, “unix”.  $grep -i "UNix" geekfile.txtOutput:  unix is great os. unix is opensource. unix is free os.
Unix linux which one you choose.
uNix is easy to learn.unix is a multiuser os.Learn unix .unix is a powerful.2. Displaying the count of number of matches : We can find the number of lines that matches the given string/pattern  $grep -c "unix" geekfile.txtOutput:  23. Display the file names that matches the pattern : We can just display the files that contains the given string/pattern.  $grep -l "unix" *

or
 
$grep -l "unix" f1.txt f2.txt f3.xt f4.txtOutput:  geekfile.txt4. Checking for the whole words in a file : By default, grep matches the given string/pattern even if it found as a substring in a file. The -w option to grep makes it match only the whole words.  $ grep -w "unix" geekfile.txtOutput:  unix is great os. unix is opensource. unix is free os.
uNix is easy to learn.unix is a multiuser os.Learn unix .unix is a powerful.5. Displaying only the matched pattern : By default, grep displays the entire line which has the matched string. We can make the grep to display only the matched string by using the -o option.  $ grep -o "unix" geekfile.txtOutput:  unix
unix
unix
unix
unix
unix6. Show line number while displaying the output using grep -n : To show the line number of file with the line matched.  $ grep -n "unix" geekfile.txtOutput:  1:unix is great os. unix is opensource. unix is free os.
4:uNix is easy to learn.unix is a multiuser os.Learn unix .unix is a powerful.7. Inverting the pattern match : You can display the lines that are not matched with the specified search sting pattern using the -v option.  $ grep -v "unix" geekfile.txtOutput:  learn operating system.
Unix linux which one you choose.8. Matching the lines that start with a string : The ^ regular expression pattern specifies the start of a line. This can be used in grep to match the lines which start with the given string or pattern.  $ grep "^unix" geekfile.txtOutput:  unix is great os. unix is opensource. unix is free os.9. Matching the lines that end with a string : The $ regular expression pattern specifies the end of a line. This can be used in grep to match the lines which end with the given string or pattern.  $ grep "os$" geekfile.txt10.Specifies expression with -e option. Can use multiple times :  $grep â€“e "Agarwal" â€“e "Aggarwal" â€“e "Agrawal" geekfile.txt11. -f file option Takes patterns from file, one per line.  $cat pattern.txt

Agarwal
Aggarwal
Agrawal $grep â€“f pattern.txt  geekfile.txt12. Print n specific lines from a file:  -A prints the searched line and n lines after the result, -B prints the searched line and n lines before the result, and -C prints the searched line and n lines after and before the result. Syntax:$grep -A[NumberOfLines(n)] [search] [file]  

$grep -B[NumberOfLines(n)] [search] [file]  

$grep -C[NumberOfLines(n)] [search] [file]  Example:$grep -A1 learn geekfile.txtOutput:  learn operating system.    
Unix linux which one you choose. 
--
uNix is easy to learn.unix is a multiuser os.Learn unix .unix is a powerful.      

(Prints the searched line along with the next n lines (here n = 1 (A1).)
(Will print each and every occurance of the found line, separating each output by --) 
(Output pattern remains the same for -B and -C respectively)                                                                                                                                       Unix linux which one you choose.                                                                                                                                            --                                                                                                                                                                          uNix is easy to learn.unix is a multiuser os.Learn unix .unix is a powerful.                                                                                                                                                    Unix linux which one you choose.                                                                                                                                            --                                                                                                                                                                          uNix is easy to learn.unix is a multiuser os.Learn unix .unix is a powerful. This article is contributed by Akshay Rajput. If you like GeeksforGeeks and would like to contribute, you can also write an article using write.geeksforgeeks.org or mail your article to contribute@geeksforgeeks.org. See your article appearing on the GeeksforGeeks’ main page and help other Geeks. Please write comments if you find anything incorrect, or you want to share more information about the topic discussed above. My Personal Notes
arrow_drop_upSaveOutput:  unix is great os. unix is opensource. unix is free os.
Unix linux which one you choose.
uNix is easy to learn.unix is a multiuser os.Learn unix .unix is a powerful.2. Displaying the count of number of matches : We can find the number of lines that matches the given string/pattern  $grep -c "unix" geekfile.txtOutput:  23. Display the file names that matches the pattern : We can just display the files that contains the given string/pattern.  $grep -l "unix" *

or
 
$grep -l "unix" f1.txt f2.txt f3.xt f4.txtOutput:  geekfile.txt4. Checking for the whole words in a file : By default, grep matches the given string/pattern even if it found as a substring in a file. The -w option to grep makes it match only the whole words.  $ grep -w "unix" geekfile.txtOutput:  unix is great os. unix is opensource. unix is free os.
uNix is easy to learn.unix is a multiuser os.Learn unix .unix is a powerful.5. Displaying only the matched pattern : By default, grep displays the entire line which has the matched string. We can make the grep to display only the matched string by using the -o option.  $ grep -o "unix" geekfile.txtOutput:  unix
unix
unix
unix
unix
unix6. Show line number while displaying the output using grep -n : To show the line number of file with the line matched.  $ grep -n "unix" geekfile.txtOutput:  1:unix is great os. unix is opensource. unix is free os.
4:uNix is easy to learn.unix is a multiuser os.Learn unix .unix is a powerful.7. Inverting the pattern match : You can display the lines that are not matched with the specified search sting pattern using the -v option.  $ grep -v "unix" geekfile.txtOutput:  learn operating system.
Unix linux which one you choose.8. Matching the lines that start with a string : The ^ regular expression pattern specifies the start of a line. This can be used in grep to match the lines which start with the given string or pattern.  $ grep "^unix" geekfile.txtOutput:  unix is great os. unix is opensource. unix is free os.9. Matching the lines that end with a string : The $ regular expression pattern specifies the end of a line. This can be used in grep to match the lines which end with the given string or pattern.  $ grep "os$" geekfile.txt10.Specifies expression with -e option. Can use multiple times :  $grep â€“e "Agarwal" â€“e "Aggarwal" â€“e "Agrawal" geekfile.txt11. -f file option Takes patterns from file, one per line.  $cat pattern.txt

Agarwal
Aggarwal
Agrawal $grep â€“f pattern.txt  geekfile.txt12. Print n specific lines from a file:  -A prints the searched line and n lines after the result, -B prints the searched line and n lines before the result, and -C prints the searched line and n lines after and before the result. Syntax:$grep -A[NumberOfLines(n)] [search] [file]  

$grep -B[NumberOfLines(n)] [search] [file]  

$grep -C[NumberOfLines(n)] [search] [file]  Example:$grep -A1 learn geekfile.txtOutput:  learn operating system.    
Unix linux which one you choose. 
--
uNix is easy to learn.unix is a multiuser os.Learn unix .unix is a powerful.      

(Prints the searched line along with the next n lines (here n = 1 (A1).)
(Will print each and every occurance of the found line, separating each output by --) 
(Output pattern remains the same for -B and -C respectively)                                                                                                                                       Unix linux which one you choose.                                                                                                                                            --                                                                                                                                                                          uNix is easy to learn.unix is a multiuser os.Learn unix .unix is a powerful.                                                                                                                                                    Unix linux which one you choose.                                                                                                                                            --                                                                                                                                                                          uNix is easy to learn.unix is a multiuser os.Learn unix .unix is a powerful. This article is contributed by Akshay Rajput. If you like GeeksforGeeks and would like to contribute, you can also write an article using write.geeksforgeeks.org or mail your article to contribute@geeksforgeeks.org. See your article appearing on the GeeksforGeeks’ main page and help other Geeks. Please write comments if you find anything incorrect, or you want to share more information about the topic discussed above. My Personal Notes
arrow_drop_upSave2. Displaying the count of number of matches : We can find the number of lines that matches the given string/pattern  $grep -c "unix" geekfile.txtOutput:  23. Display the file names that matches the pattern : We can just display the files that contains the given string/pattern.  $grep -l "unix" *

or
 
$grep -l "unix" f1.txt f2.txt f3.xt f4.txtOutput:  geekfile.txt4. Checking for the whole words in a file : By default, grep matches the given string/pattern even if it found as a substring in a file. The -w option to grep makes it match only the whole words.  $ grep -w "unix" geekfile.txtOutput:  unix is great os. unix is opensource. unix is free os.
uNix is easy to learn.unix is a multiuser os.Learn unix .unix is a powerful.5. Displaying only the matched pattern : By default, grep displays the entire line which has the matched string. We can make the grep to display only the matched string by using the -o option.  $ grep -o "unix" geekfile.txtOutput:  unix
unix
unix
unix
unix
unix6. Show line number while displaying the output using grep -n : To show the line number of file with the line matched.  $ grep -n "unix" geekfile.txtOutput:  1:unix is great os. unix is opensource. unix is free os.
4:uNix is easy to learn.unix is a multiuser os.Learn unix .unix is a powerful.7. Inverting the pattern match : You can display the lines that are not matched with the specified search sting pattern using the -v option.  $ grep -v "unix" geekfile.txtOutput:  learn operating system.
Unix linux which one you choose.8. Matching the lines that start with a string : The ^ regular expression pattern specifies the start of a line. This can be used in grep to match the lines which start with the given string or pattern.  $ grep "^unix" geekfile.txtOutput:  unix is great os. unix is opensource. unix is free os.9. Matching the lines that end with a string : The $ regular expression pattern specifies the end of a line. This can be used in grep to match the lines which end with the given string or pattern.  $ grep "os$" geekfile.txt10.Specifies expression with -e option. Can use multiple times :  $grep â€“e "Agarwal" â€“e "Aggarwal" â€“e "Agrawal" geekfile.txt11. -f file option Takes patterns from file, one per line.  $cat pattern.txt

Agarwal
Aggarwal
Agrawal $grep â€“f pattern.txt  geekfile.txt12. Print n specific lines from a file:  -A prints the searched line and n lines after the result, -B prints the searched line and n lines before the result, and -C prints the searched line and n lines after and before the result. Syntax:$grep -A[NumberOfLines(n)] [search] [file]  

$grep -B[NumberOfLines(n)] [search] [file]  

$grep -C[NumberOfLines(n)] [search] [file]  Example:$grep -A1 learn geekfile.txtOutput:  learn operating system.    
Unix linux which one you choose. 
--
uNix is easy to learn.unix is a multiuser os.Learn unix .unix is a powerful.      

(Prints the searched line along with the next n lines (here n = 1 (A1).)
(Will print each and every occurance of the found line, separating each output by --) 
(Output pattern remains the same for -B and -C respectively)                                                                                                                                       Unix linux which one you choose.                                                                                                                                            --                                                                                                                                                                          uNix is easy to learn.unix is a multiuser os.Learn unix .unix is a powerful.                                                                                                                                                    Unix linux which one you choose.                                                                                                                                            --                                                                                                                                                                          uNix is easy to learn.unix is a multiuser os.Learn unix .unix is a powerful. This article is contributed by Akshay Rajput. If you like GeeksforGeeks and would like to contribute, you can also write an article using write.geeksforgeeks.org or mail your article to contribute@geeksforgeeks.org. See your article appearing on the GeeksforGeeks’ main page and help other Geeks. Please write comments if you find anything incorrect, or you want to share more information about the topic discussed above. My Personal Notes
arrow_drop_upSaveOutput:  23. Display the file names that matches the pattern : We can just display the files that contains the given string/pattern.  $grep -l "unix" *

or
 
$grep -l "unix" f1.txt f2.txt f3.xt f4.txtOutput:  geekfile.txt4. Checking for the whole words in a file : By default, grep matches the given string/pattern even if it found as a substring in a file. The -w option to grep makes it match only the whole words.  $ grep -w "unix" geekfile.txtOutput:  unix is great os. unix is opensource. unix is free os.
uNix is easy to learn.unix is a multiuser os.Learn unix .unix is a powerful.5. Displaying only the matched pattern : By default, grep displays the entire line which has the matched string. We can make the grep to display only the matched string by using the -o option.  $ grep -o "unix" geekfile.txtOutput:  unix
unix
unix
unix
unix
unix6. Show line number while displaying the output using grep -n : To show the line number of file with the line matched.  $ grep -n "unix" geekfile.txtOutput:  1:unix is great os. unix is opensource. unix is free os.
4:uNix is easy to learn.unix is a multiuser os.Learn unix .unix is a powerful.7. Inverting the pattern match : You can display the lines that are not matched with the specified search sting pattern using the -v option.  $ grep -v "unix" geekfile.txtOutput:  learn operating system.
Unix linux which one you choose.8. Matching the lines that start with a string : The ^ regular expression pattern specifies the start of a line. This can be used in grep to match the lines which start with the given string or pattern.  $ grep "^unix" geekfile.txtOutput:  unix is great os. unix is opensource. unix is free os.9. Matching the lines that end with a string : The $ regular expression pattern specifies the end of a line. This can be used in grep to match the lines which end with the given string or pattern.  $ grep "os$" geekfile.txt10.Specifies expression with -e option. Can use multiple times :  $grep â€“e "Agarwal" â€“e "Aggarwal" â€“e "Agrawal" geekfile.txt11. -f file option Takes patterns from file, one per line.  $cat pattern.txt

Agarwal
Aggarwal
Agrawal $grep â€“f pattern.txt  geekfile.txt12. Print n specific lines from a file:  -A prints the searched line and n lines after the result, -B prints the searched line and n lines before the result, and -C prints the searched line and n lines after and before the result. Syntax:$grep -A[NumberOfLines(n)] [search] [file]  

$grep -B[NumberOfLines(n)] [search] [file]  

$grep -C[NumberOfLines(n)] [search] [file]  Example:$grep -A1 learn geekfile.txtOutput:  learn operating system.    
Unix linux which one you choose. 
--
uNix is easy to learn.unix is a multiuser os.Learn unix .unix is a powerful.      

(Prints the searched line along with the next n lines (here n = 1 (A1).)
(Will print each and every occurance of the found line, separating each output by --) 
(Output pattern remains the same for -B and -C respectively)                                                                                                                                       Unix linux which one you choose.                                                                                                                                            --                                                                                                                                                                          uNix is easy to learn.unix is a multiuser os.Learn unix .unix is a powerful.                                                                                                                                                    Unix linux which one you choose.                                                                                                                                            --                                                                                                                                                                          uNix is easy to learn.unix is a multiuser os.Learn unix .unix is a powerful. This article is contributed by Akshay Rajput. If you like GeeksforGeeks and would like to contribute, you can also write an article using write.geeksforgeeks.org or mail your article to contribute@geeksforgeeks.org. See your article appearing on the GeeksforGeeks’ main page and help other Geeks. Please write comments if you find anything incorrect, or you want to share more information about the topic discussed above. My Personal Notes
arrow_drop_upSave3. Display the file names that matches the pattern : We can just display the files that contains the given string/pattern.  $grep -l "unix" *

or
 
$grep -l "unix" f1.txt f2.txt f3.xt f4.txtOutput:  geekfile.txt4. Checking for the whole words in a file : By default, grep matches the given string/pattern even if it found as a substring in a file. The -w option to grep makes it match only the whole words.  $ grep -w "unix" geekfile.txtOutput:  unix is great os. unix is opensource. unix is free os.
uNix is easy to learn.unix is a multiuser os.Learn unix .unix is a powerful.5. Displaying only the matched pattern : By default, grep displays the entire line which has the matched string. We can make the grep to display only the matched string by using the -o option.  $ grep -o "unix" geekfile.txtOutput:  unix
unix
unix
unix
unix
unix6. Show line number while displaying the output using grep -n : To show the line number of file with the line matched.  $ grep -n "unix" geekfile.txtOutput:  1:unix is great os. unix is opensource. unix is free os.
4:uNix is easy to learn.unix is a multiuser os.Learn unix .unix is a powerful.7. Inverting the pattern match : You can display the lines that are not matched with the specified search sting pattern using the -v option.  $ grep -v "unix" geekfile.txtOutput:  learn operating system.
Unix linux which one you choose.8. Matching the lines that start with a string : The ^ regular expression pattern specifies the start of a line. This can be used in grep to match the lines which start with the given string or pattern.  $ grep "^unix" geekfile.txtOutput:  unix is great os. unix is opensource. unix is free os.9. Matching the lines that end with a string : The $ regular expression pattern specifies the end of a line. This can be used in grep to match the lines which end with the given string or pattern.  $ grep "os$" geekfile.txt10.Specifies expression with -e option. Can use multiple times :  $grep â€“e "Agarwal" â€“e "Aggarwal" â€“e "Agrawal" geekfile.txt11. -f file option Takes patterns from file, one per line.  $cat pattern.txt

Agarwal
Aggarwal
Agrawal $grep â€“f pattern.txt  geekfile.txt12. Print n specific lines from a file:  -A prints the searched line and n lines after the result, -B prints the searched line and n lines before the result, and -C prints the searched line and n lines after and before the result. Syntax:$grep -A[NumberOfLines(n)] [search] [file]  

$grep -B[NumberOfLines(n)] [search] [file]  

$grep -C[NumberOfLines(n)] [search] [file]  Example:$grep -A1 learn geekfile.txtOutput:  learn operating system.    
Unix linux which one you choose. 
--
uNix is easy to learn.unix is a multiuser os.Learn unix .unix is a powerful.      

(Prints the searched line along with the next n lines (here n = 1 (A1).)
(Will print each and every occurance of the found line, separating each output by --) 
(Output pattern remains the same for -B and -C respectively)                                                                                                                                       Unix linux which one you choose.                                                                                                                                            --                                                                                                                                                                          uNix is easy to learn.unix is a multiuser os.Learn unix .unix is a powerful.                                                                                                                                                    Unix linux which one you choose.                                                                                                                                            --                                                                                                                                                                          uNix is easy to learn.unix is a multiuser os.Learn unix .unix is a powerful. This article is contributed by Akshay Rajput. If you like GeeksforGeeks and would like to contribute, you can also write an article using write.geeksforgeeks.org or mail your article to contribute@geeksforgeeks.org. See your article appearing on the GeeksforGeeks’ main page and help other Geeks. Please write comments if you find anything incorrect, or you want to share more information about the topic discussed above. My Personal Notes
arrow_drop_upSaveOutput:  geekfile.txt4. Checking for the whole words in a file : By default, grep matches the given string/pattern even if it found as a substring in a file. The -w option to grep makes it match only the whole words.  $ grep -w "unix" geekfile.txtOutput:  unix is great os. unix is opensource. unix is free os.
uNix is easy to learn.unix is a multiuser os.Learn unix .unix is a powerful.5. Displaying only the matched pattern : By default, grep displays the entire line which has the matched string. We can make the grep to display only the matched string by using the -o option.  $ grep -o "unix" geekfile.txtOutput:  unix
unix
unix
unix
unix
unix6. Show line number while displaying the output using grep -n : To show the line number of file with the line matched.  $ grep -n "unix" geekfile.txtOutput:  1:unix is great os. unix is opensource. unix is free os.
4:uNix is easy to learn.unix is a multiuser os.Learn unix .unix is a powerful.7. Inverting the pattern match : You can display the lines that are not matched with the specified search sting pattern using the -v option.  $ grep -v "unix" geekfile.txtOutput:  learn operating system.
Unix linux which one you choose.8. Matching the lines that start with a string : The ^ regular expression pattern specifies the start of a line. This can be used in grep to match the lines which start with the given string or pattern.  $ grep "^unix" geekfile.txtOutput:  unix is great os. unix is opensource. unix is free os.9. Matching the lines that end with a string : The $ regular expression pattern specifies the end of a line. This can be used in grep to match the lines which end with the given string or pattern.  $ grep "os$" geekfile.txt10.Specifies expression with -e option. Can use multiple times :  $grep â€“e "Agarwal" â€“e "Aggarwal" â€“e "Agrawal" geekfile.txt11. -f file option Takes patterns from file, one per line.  $cat pattern.txt

Agarwal
Aggarwal
Agrawal $grep â€“f pattern.txt  geekfile.txt12. Print n specific lines from a file:  -A prints the searched line and n lines after the result, -B prints the searched line and n lines before the result, and -C prints the searched line and n lines after and before the result. Syntax:$grep -A[NumberOfLines(n)] [search] [file]  

$grep -B[NumberOfLines(n)] [search] [file]  

$grep -C[NumberOfLines(n)] [search] [file]  Example:$grep -A1 learn geekfile.txtOutput:  learn operating system.    
Unix linux which one you choose. 
--
uNix is easy to learn.unix is a multiuser os.Learn unix .unix is a powerful.      

(Prints the searched line along with the next n lines (here n = 1 (A1).)
(Will print each and every occurance of the found line, separating each output by --) 
(Output pattern remains the same for -B and -C respectively)                                                                                                                                       Unix linux which one you choose.                                                                                                                                            --                                                                                                                                                                          uNix is easy to learn.unix is a multiuser os.Learn unix .unix is a powerful.                                                                                                                                                    Unix linux which one you choose.                                                                                                                                            --                                                                                                                                                                          uNix is easy to learn.unix is a multiuser os.Learn unix .unix is a powerful. This article is contributed by Akshay Rajput. If you like GeeksforGeeks and would like to contribute, you can also write an article using write.geeksforgeeks.org or mail your article to contribute@geeksforgeeks.org. See your article appearing on the GeeksforGeeks’ main page and help other Geeks. Please write comments if you find anything incorrect, or you want to share more information about the topic discussed above. My Personal Notes
arrow_drop_upSave4. Checking for the whole words in a file : By default, grep matches the given string/pattern even if it found as a substring in a file. The -w option to grep makes it match only the whole words.  Output:  unix is great os. unix is opensource. unix is free os.
uNix is easy to learn.unix is a multiuser os.Learn unix .unix is a powerful.5. Displaying only the matched pattern : By default, grep displays the entire line which has the matched string. We can make the grep to display only the matched string by using the -o option.  $ grep -o "unix" geekfile.txtOutput:  unix
unix
unix
unix
unix
unix6. Show line number while displaying the output using grep -n : To show the line number of file with the line matched.  $ grep -n "unix" geekfile.txtOutput:  1:unix is great os. unix is opensource. unix is free os.
4:uNix is easy to learn.unix is a multiuser os.Learn unix .unix is a powerful.7. Inverting the pattern match : You can display the lines that are not matched with the specified search sting pattern using the -v option.  $ grep -v "unix" geekfile.txtOutput:  learn operating system.
Unix linux which one you choose.8. Matching the lines that start with a string : The ^ regular expression pattern specifies the start of a line. This can be used in grep to match the lines which start with the given string or pattern.  $ grep "^unix" geekfile.txtOutput:  unix is great os. unix is opensource. unix is free os.9. Matching the lines that end with a string : The $ regular expression pattern specifies the end of a line. This can be used in grep to match the lines which end with the given string or pattern.  $ grep "os$" geekfile.txt10.Specifies expression with -e option. Can use multiple times :  $grep â€“e "Agarwal" â€“e "Aggarwal" â€“e "Agrawal" geekfile.txt11. -f file option Takes patterns from file, one per line.  $cat pattern.txt

Agarwal
Aggarwal
Agrawal $grep â€“f pattern.txt  geekfile.txt12. Print n specific lines from a file:  -A prints the searched line and n lines after the result, -B prints the searched line and n lines before the result, and -C prints the searched line and n lines after and before the result. Syntax:$grep -A[NumberOfLines(n)] [search] [file]  

$grep -B[NumberOfLines(n)] [search] [file]  

$grep -C[NumberOfLines(n)] [search] [file]  Example:$grep -A1 learn geekfile.txtOutput:  learn operating system.    
Unix linux which one you choose. 
--
uNix is easy to learn.unix is a multiuser os.Learn unix .unix is a powerful.      

(Prints the searched line along with the next n lines (here n = 1 (A1).)
(Will print each and every occurance of the found line, separating each output by --) 
(Output pattern remains the same for -B and -C respectively)                                                                                                                                       Unix linux which one you choose.                                                                                                                                            --                                                                                                                                                                          uNix is easy to learn.unix is a multiuser os.Learn unix .unix is a powerful.                                                                                                                                                    Unix linux which one you choose.                                                                                                                                            --                                                                                                                                                                          uNix is easy to learn.unix is a multiuser os.Learn unix .unix is a powerful. This article is contributed by Akshay Rajput. If you like GeeksforGeeks and would like to contribute, you can also write an article using write.geeksforgeeks.org or mail your article to contribute@geeksforgeeks.org. See your article appearing on the GeeksforGeeks’ main page and help other Geeks. Please write comments if you find anything incorrect, or you want to share more information about the topic discussed above. My Personal Notes
arrow_drop_upSave5. Displaying only the matched pattern : By default, grep displays the entire line which has the matched string. We can make the grep to display only the matched string by using the -o option.  $ grep -o "unix" geekfile.txtOutput:  unix
unix
unix
unix
unix
unix6. Show line number while displaying the output using grep -n : To show the line number of file with the line matched.  $ grep -n "unix" geekfile.txtOutput:  1:unix is great os. unix is opensource. unix is free os.
4:uNix is easy to learn.unix is a multiuser os.Learn unix .unix is a powerful.7. Inverting the pattern match : You can display the lines that are not matched with the specified search sting pattern using the -v option.  $ grep -v "unix" geekfile.txtOutput:  learn operating system.
Unix linux which one you choose.8. Matching the lines that start with a string : The ^ regular expression pattern specifies the start of a line. This can be used in grep to match the lines which start with the given string or pattern.  $ grep "^unix" geekfile.txtOutput:  unix is great os. unix is opensource. unix is free os.9. Matching the lines that end with a string : The $ regular expression pattern specifies the end of a line. This can be used in grep to match the lines which end with the given string or pattern.  $ grep "os$" geekfile.txt10.Specifies expression with -e option. Can use multiple times :  $grep â€“e "Agarwal" â€“e "Aggarwal" â€“e "Agrawal" geekfile.txt11. -f file option Takes patterns from file, one per line.  $cat pattern.txt

Agarwal
Aggarwal
Agrawal $grep â€“f pattern.txt  geekfile.txt12. Print n specific lines from a file:  -A prints the searched line and n lines after the result, -B prints the searched line and n lines before the result, and -C prints the searched line and n lines after and before the result. Syntax:$grep -A[NumberOfLines(n)] [search] [file]  

$grep -B[NumberOfLines(n)] [search] [file]  

$grep -C[NumberOfLines(n)] [search] [file]  Example:$grep -A1 learn geekfile.txtOutput:  learn operating system.    
Unix linux which one you choose. 
--
uNix is easy to learn.unix is a multiuser os.Learn unix .unix is a powerful.      

(Prints the searched line along with the next n lines (here n = 1 (A1).)
(Will print each and every occurance of the found line, separating each output by --) 
(Output pattern remains the same for -B and -C respectively)                                                                                                                                       Unix linux which one you choose.                                                                                                                                            --                                                                                                                                                                          uNix is easy to learn.unix is a multiuser os.Learn unix .unix is a powerful.                                                                                                                                                    Unix linux which one you choose.                                                                                                                                            --                                                                                                                                                                          uNix is easy to learn.unix is a multiuser os.Learn unix .unix is a powerful. This article is contributed by Akshay Rajput. If you like GeeksforGeeks and would like to contribute, you can also write an article using write.geeksforgeeks.org or mail your article to contribute@geeksforgeeks.org. See your article appearing on the GeeksforGeeks’ main page and help other Geeks. Please write comments if you find anything incorrect, or you want to share more information about the topic discussed above. My Personal Notes
arrow_drop_upSaveOutput:  unix
unix
unix
unix
unix
unix6. Show line number while displaying the output using grep -n : To show the line number of file with the line matched.  $ grep -n "unix" geekfile.txtOutput:  1:unix is great os. unix is opensource. unix is free os.
4:uNix is easy to learn.unix is a multiuser os.Learn unix .unix is a powerful.7. Inverting the pattern match : You can display the lines that are not matched with the specified search sting pattern using the -v option.  $ grep -v "unix" geekfile.txtOutput:  learn operating system.
Unix linux which one you choose.8. Matching the lines that start with a string : The ^ regular expression pattern specifies the start of a line. This can be used in grep to match the lines which start with the given string or pattern.  $ grep "^unix" geekfile.txtOutput:  unix is great os. unix is opensource. unix is free os.9. Matching the lines that end with a string : The $ regular expression pattern specifies the end of a line. This can be used in grep to match the lines which end with the given string or pattern.  $ grep "os$" geekfile.txt10.Specifies expression with -e option. Can use multiple times :  $grep â€“e "Agarwal" â€“e "Aggarwal" â€“e "Agrawal" geekfile.txt11. -f file option Takes patterns from file, one per line.  $cat pattern.txt

Agarwal
Aggarwal
Agrawal $grep â€“f pattern.txt  geekfile.txt12. Print n specific lines from a file:  -A prints the searched line and n lines after the result, -B prints the searched line and n lines before the result, and -C prints the searched line and n lines after and before the result. Syntax:$grep -A[NumberOfLines(n)] [search] [file]  

$grep -B[NumberOfLines(n)] [search] [file]  

$grep -C[NumberOfLines(n)] [search] [file]  Example:$grep -A1 learn geekfile.txtOutput:  learn operating system.    
Unix linux which one you choose. 
--
uNix is easy to learn.unix is a multiuser os.Learn unix .unix is a powerful.      

(Prints the searched line along with the next n lines (here n = 1 (A1).)
(Will print each and every occurance of the found line, separating each output by --) 
(Output pattern remains the same for -B and -C respectively)                                                                                                                                       Unix linux which one you choose.                                                                                                                                            --                                                                                                                                                                          uNix is easy to learn.unix is a multiuser os.Learn unix .unix is a powerful.                                                                                                                                                    Unix linux which one you choose.                                                                                                                                            --                                                                                                                                                                          uNix is easy to learn.unix is a multiuser os.Learn unix .unix is a powerful. This article is contributed by Akshay Rajput. If you like GeeksforGeeks and would like to contribute, you can also write an article using write.geeksforgeeks.org or mail your article to contribute@geeksforgeeks.org. See your article appearing on the GeeksforGeeks’ main page and help other Geeks. Please write comments if you find anything incorrect, or you want to share more information about the topic discussed above. My Personal Notes
arrow_drop_upSave6. Show line number while displaying the output using grep -n : To show the line number of file with the line matched.  $ grep -n "unix" geekfile.txtOutput:  1:unix is great os. unix is opensource. unix is free os.
4:uNix is easy to learn.unix is a multiuser os.Learn unix .unix is a powerful.7. Inverting the pattern match : You can display the lines that are not matched with the specified search sting pattern using the -v option.  $ grep -v "unix" geekfile.txtOutput:  learn operating system.
Unix linux which one you choose.8. Matching the lines that start with a string : The ^ regular expression pattern specifies the start of a line. This can be used in grep to match the lines which start with the given string or pattern.  $ grep "^unix" geekfile.txtOutput:  unix is great os. unix is opensource. unix is free os.9. Matching the lines that end with a string : The $ regular expression pattern specifies the end of a line. This can be used in grep to match the lines which end with the given string or pattern.  $ grep "os$" geekfile.txt10.Specifies expression with -e option. Can use multiple times :  $grep â€“e "Agarwal" â€“e "Aggarwal" â€“e "Agrawal" geekfile.txt11. -f file option Takes patterns from file, one per line.  $cat pattern.txt

Agarwal
Aggarwal
Agrawal $grep â€“f pattern.txt  geekfile.txt12. Print n specific lines from a file:  -A prints the searched line and n lines after the result, -B prints the searched line and n lines before the result, and -C prints the searched line and n lines after and before the result. Syntax:$grep -A[NumberOfLines(n)] [search] [file]  

$grep -B[NumberOfLines(n)] [search] [file]  

$grep -C[NumberOfLines(n)] [search] [file]  Example:$grep -A1 learn geekfile.txtOutput:  learn operating system.    
Unix linux which one you choose. 
--
uNix is easy to learn.unix is a multiuser os.Learn unix .unix is a powerful.      

(Prints the searched line along with the next n lines (here n = 1 (A1).)
(Will print each and every occurance of the found line, separating each output by --) 
(Output pattern remains the same for -B and -C respectively)                                                                                                                                       Unix linux which one you choose.                                                                                                                                            --                                                                                                                                                                          uNix is easy to learn.unix is a multiuser os.Learn unix .unix is a powerful.                                                                                                                                                    Unix linux which one you choose.                                                                                                                                            --                                                                                                                                                                          uNix is easy to learn.unix is a multiuser os.Learn unix .unix is a powerful. This article is contributed by Akshay Rajput. If you like GeeksforGeeks and would like to contribute, you can also write an article using write.geeksforgeeks.org or mail your article to contribute@geeksforgeeks.org. See your article appearing on the GeeksforGeeks’ main page and help other Geeks. Please write comments if you find anything incorrect, or you want to share more information about the topic discussed above. My Personal Notes
arrow_drop_upSaveOutput:  1:unix is great os. unix is opensource. unix is free os.
4:uNix is easy to learn.unix is a multiuser os.Learn unix .unix is a powerful.7. Inverting the pattern match : You can display the lines that are not matched with the specified search sting pattern using the -v option.  $ grep -v "unix" geekfile.txtOutput:  learn operating system.
Unix linux which one you choose.8. Matching the lines that start with a string : The ^ regular expression pattern specifies the start of a line. This can be used in grep to match the lines which start with the given string or pattern.  $ grep "^unix" geekfile.txtOutput:  unix is great os. unix is opensource. unix is free os.9. Matching the lines that end with a string : The $ regular expression pattern specifies the end of a line. This can be used in grep to match the lines which end with the given string or pattern.  $ grep "os$" geekfile.txt10.Specifies expression with -e option. Can use multiple times :  $grep â€“e "Agarwal" â€“e "Aggarwal" â€“e "Agrawal" geekfile.txt11. -f file option Takes patterns from file, one per line.  $cat pattern.txt

Agarwal
Aggarwal
Agrawal $grep â€“f pattern.txt  geekfile.txt12. Print n specific lines from a file:  -A prints the searched line and n lines after the result, -B prints the searched line and n lines before the result, and -C prints the searched line and n lines after and before the result. Syntax:$grep -A[NumberOfLines(n)] [search] [file]  

$grep -B[NumberOfLines(n)] [search] [file]  

$grep -C[NumberOfLines(n)] [search] [file]  Example:$grep -A1 learn geekfile.txtOutput:  learn operating system.    
Unix linux which one you choose. 
--
uNix is easy to learn.unix is a multiuser os.Learn unix .unix is a powerful.      

(Prints the searched line along with the next n lines (here n = 1 (A1).)
(Will print each and every occurance of the found line, separating each output by --) 
(Output pattern remains the same for -B and -C respectively)                                                                                                                                       Unix linux which one you choose.                                                                                                                                            --                                                                                                                                                                          uNix is easy to learn.unix is a multiuser os.Learn unix .unix is a powerful.                                                                                                                                                    Unix linux which one you choose.                                                                                                                                            --                                                                                                                                                                          uNix is easy to learn.unix is a multiuser os.Learn unix .unix is a powerful. This article is contributed by Akshay Rajput. If you like GeeksforGeeks and would like to contribute, you can also write an article using write.geeksforgeeks.org or mail your article to contribute@geeksforgeeks.org. See your article appearing on the GeeksforGeeks’ main page and help other Geeks. Please write comments if you find anything incorrect, or you want to share more information about the topic discussed above. My Personal Notes
arrow_drop_upSave7. Inverting the pattern match : You can display the lines that are not matched with the specified search sting pattern using the -v option.  $ grep -v "unix" geekfile.txtOutput:  learn operating system.
Unix linux which one you choose.8. Matching the lines that start with a string : The ^ regular expression pattern specifies the start of a line. This can be used in grep to match the lines which start with the given string or pattern.  $ grep "^unix" geekfile.txtOutput:  unix is great os. unix is opensource. unix is free os.9. Matching the lines that end with a string : The $ regular expression pattern specifies the end of a line. This can be used in grep to match the lines which end with the given string or pattern.  $ grep "os$" geekfile.txt10.Specifies expression with -e option. Can use multiple times :  $grep â€“e "Agarwal" â€“e "Aggarwal" â€“e "Agrawal" geekfile.txt11. -f file option Takes patterns from file, one per line.  $cat pattern.txt

Agarwal
Aggarwal
Agrawal $grep â€“f pattern.txt  geekfile.txt12. Print n specific lines from a file:  -A prints the searched line and n lines after the result, -B prints the searched line and n lines before the result, and -C prints the searched line and n lines after and before the result. Syntax:$grep -A[NumberOfLines(n)] [search] [file]  

$grep -B[NumberOfLines(n)] [search] [file]  

$grep -C[NumberOfLines(n)] [search] [file]  Example:$grep -A1 learn geekfile.txtOutput:  learn operating system.    
Unix linux which one you choose. 
--
uNix is easy to learn.unix is a multiuser os.Learn unix .unix is a powerful.      

(Prints the searched line along with the next n lines (here n = 1 (A1).)
(Will print each and every occurance of the found line, separating each output by --) 
(Output pattern remains the same for -B and -C respectively)                                                                                                                                       Unix linux which one you choose.                                                                                                                                            --                                                                                                                                                                          uNix is easy to learn.unix is a multiuser os.Learn unix .unix is a powerful.                                                                                                                                                    Unix linux which one you choose.                                                                                                                                            --                                                                                                                                                                          uNix is easy to learn.unix is a multiuser os.Learn unix .unix is a powerful. This article is contributed by Akshay Rajput. If you like GeeksforGeeks and would like to contribute, you can also write an article using write.geeksforgeeks.org or mail your article to contribute@geeksforgeeks.org. See your article appearing on the GeeksforGeeks’ main page and help other Geeks. Please write comments if you find anything incorrect, or you want to share more information about the topic discussed above. My Personal Notes
arrow_drop_upSaveOutput:  learn operating system.
Unix linux which one you choose.8. Matching the lines that start with a string : The ^ regular expression pattern specifies the start of a line. This can be used in grep to match the lines which start with the given string or pattern.  $ grep "^unix" geekfile.txtOutput:  unix is great os. unix is opensource. unix is free os.9. Matching the lines that end with a string : The $ regular expression pattern specifies the end of a line. This can be used in grep to match the lines which end with the given string or pattern.  $ grep "os$" geekfile.txt10.Specifies expression with -e option. Can use multiple times :  $grep â€“e "Agarwal" â€“e "Aggarwal" â€“e "Agrawal" geekfile.txt11. -f file option Takes patterns from file, one per line.  $cat pattern.txt

Agarwal
Aggarwal
Agrawal $grep â€“f pattern.txt  geekfile.txt12. Print n specific lines from a file:  -A prints the searched line and n lines after the result, -B prints the searched line and n lines before the result, and -C prints the searched line and n lines after and before the result. Syntax:$grep -A[NumberOfLines(n)] [search] [file]  

$grep -B[NumberOfLines(n)] [search] [file]  

$grep -C[NumberOfLines(n)] [search] [file]  Example:$grep -A1 learn geekfile.txtOutput:  learn operating system.    
Unix linux which one you choose. 
--
uNix is easy to learn.unix is a multiuser os.Learn unix .unix is a powerful.      

(Prints the searched line along with the next n lines (here n = 1 (A1).)
(Will print each and every occurance of the found line, separating each output by --) 
(Output pattern remains the same for -B and -C respectively)                                                                                                                                       Unix linux which one you choose.                                                                                                                                            --                                                                                                                                                                          uNix is easy to learn.unix is a multiuser os.Learn unix .unix is a powerful.                                                                                                                                                    Unix linux which one you choose.                                                                                                                                            --                                                                                                                                                                          uNix is easy to learn.unix is a multiuser os.Learn unix .unix is a powerful. This article is contributed by Akshay Rajput. If you like GeeksforGeeks and would like to contribute, you can also write an article using write.geeksforgeeks.org or mail your article to contribute@geeksforgeeks.org. See your article appearing on the GeeksforGeeks’ main page and help other Geeks. Please write comments if you find anything incorrect, or you want to share more information about the topic discussed above. My Personal Notes
arrow_drop_upSave8. Matching the lines that start with a string : The ^ regular expression pattern specifies the start of a line. This can be used in grep to match the lines which start with the given string or pattern.  $ grep "^unix" geekfile.txtOutput:  unix is great os. unix is opensource. unix is free os.9. Matching the lines that end with a string : The $ regular expression pattern specifies the end of a line. This can be used in grep to match the lines which end with the given string or pattern.  $ grep "os$" geekfile.txt10.Specifies expression with -e option. Can use multiple times :  $grep â€“e "Agarwal" â€“e "Aggarwal" â€“e "Agrawal" geekfile.txt11. -f file option Takes patterns from file, one per line.  $cat pattern.txt

Agarwal
Aggarwal
Agrawal $grep â€“f pattern.txt  geekfile.txt12. Print n specific lines from a file:  -A prints the searched line and n lines after the result, -B prints the searched line and n lines before the result, and -C prints the searched line and n lines after and before the result. Syntax:$grep -A[NumberOfLines(n)] [search] [file]  

$grep -B[NumberOfLines(n)] [search] [file]  

$grep -C[NumberOfLines(n)] [search] [file]  Example:$grep -A1 learn geekfile.txtOutput:  learn operating system.    
Unix linux which one you choose. 
--
uNix is easy to learn.unix is a multiuser os.Learn unix .unix is a powerful.      

(Prints the searched line along with the next n lines (here n = 1 (A1).)
(Will print each and every occurance of the found line, separating each output by --) 
(Output pattern remains the same for -B and -C respectively)                                                                                                                                       Unix linux which one you choose.                                                                                                                                            --                                                                                                                                                                          uNix is easy to learn.unix is a multiuser os.Learn unix .unix is a powerful.                                                                                                                                                    Unix linux which one you choose.                                                                                                                                            --                                                                                                                                                                          uNix is easy to learn.unix is a multiuser os.Learn unix .unix is a powerful. This article is contributed by Akshay Rajput. If you like GeeksforGeeks and would like to contribute, you can also write an article using write.geeksforgeeks.org or mail your article to contribute@geeksforgeeks.org. See your article appearing on the GeeksforGeeks’ main page and help other Geeks. Please write comments if you find anything incorrect, or you want to share more information about the topic discussed above. My Personal Notes
arrow_drop_upSaveOutput:  unix is great os. unix is opensource. unix is free os.9. Matching the lines that end with a string : The $ regular expression pattern specifies the end of a line. This can be used in grep to match the lines which end with the given string or pattern.  $ grep "os$" geekfile.txt10.Specifies expression with -e option. Can use multiple times :  $grep â€“e "Agarwal" â€“e "Aggarwal" â€“e "Agrawal" geekfile.txt11. -f file option Takes patterns from file, one per line.  $cat pattern.txt

Agarwal
Aggarwal
Agrawal $grep â€“f pattern.txt  geekfile.txt12. Print n specific lines from a file:  -A prints the searched line and n lines after the result, -B prints the searched line and n lines before the result, and -C prints the searched line and n lines after and before the result. Syntax:$grep -A[NumberOfLines(n)] [search] [file]  

$grep -B[NumberOfLines(n)] [search] [file]  

$grep -C[NumberOfLines(n)] [search] [file]  Example:$grep -A1 learn geekfile.txtOutput:  learn operating system.    
Unix linux which one you choose. 
--
uNix is easy to learn.unix is a multiuser os.Learn unix .unix is a powerful.      

(Prints the searched line along with the next n lines (here n = 1 (A1).)
(Will print each and every occurance of the found line, separating each output by --) 
(Output pattern remains the same for -B and -C respectively)                                                                                                                                       Unix linux which one you choose.                                                                                                                                            --                                                                                                                                                                          uNix is easy to learn.unix is a multiuser os.Learn unix .unix is a powerful.                                                                                                                                                    Unix linux which one you choose.                                                                                                                                            --                                                                                                                                                                          uNix is easy to learn.unix is a multiuser os.Learn unix .unix is a powerful. This article is contributed by Akshay Rajput. If you like GeeksforGeeks and would like to contribute, you can also write an article using write.geeksforgeeks.org or mail your article to contribute@geeksforgeeks.org. See your article appearing on the GeeksforGeeks’ main page and help other Geeks. Please write comments if you find anything incorrect, or you want to share more information about the topic discussed above. My Personal Notes
arrow_drop_upSave9. Matching the lines that end with a string : The $ regular expression pattern specifies the end of a line. This can be used in grep to match the lines which end with the given string or pattern.  10.Specifies expression with -e option. Can use multiple times :  $grep â€“e "Agarwal" â€“e "Aggarwal" â€“e "Agrawal" geekfile.txt11. -f file option Takes patterns from file, one per line.  $cat pattern.txt

Agarwal
Aggarwal
Agrawal $grep â€“f pattern.txt  geekfile.txt12. Print n specific lines from a file:  -A prints the searched line and n lines after the result, -B prints the searched line and n lines before the result, and -C prints the searched line and n lines after and before the result. Syntax:$grep -A[NumberOfLines(n)] [search] [file]  

$grep -B[NumberOfLines(n)] [search] [file]  

$grep -C[NumberOfLines(n)] [search] [file]  Example:$grep -A1 learn geekfile.txtOutput:  learn operating system.    
Unix linux which one you choose. 
--
uNix is easy to learn.unix is a multiuser os.Learn unix .unix is a powerful.      

(Prints the searched line along with the next n lines (here n = 1 (A1).)
(Will print each and every occurance of the found line, separating each output by --) 
(Output pattern remains the same for -B and -C respectively)                                                                                                                                       Unix linux which one you choose.                                                                                                                                            --                                                                                                                                                                          uNix is easy to learn.unix is a multiuser os.Learn unix .unix is a powerful.                                                                                                                                                    Unix linux which one you choose.                                                                                                                                            --                                                                                                                                                                          uNix is easy to learn.unix is a multiuser os.Learn unix .unix is a powerful. This article is contributed by Akshay Rajput. If you like GeeksforGeeks and would like to contribute, you can also write an article using write.geeksforgeeks.org or mail your article to contribute@geeksforgeeks.org. See your article appearing on the GeeksforGeeks’ main page and help other Geeks. Please write comments if you find anything incorrect, or you want to share more information about the topic discussed above. My Personal Notes
arrow_drop_upSave11. -f file option Takes patterns from file, one per line.  $cat pattern.txt

Agarwal
Aggarwal
Agrawal $grep â€“f pattern.txt  geekfile.txt12. Print n specific lines from a file:  -A prints the searched line and n lines after the result, -B prints the searched line and n lines before the result, and -C prints the searched line and n lines after and before the result. Syntax:$grep -A[NumberOfLines(n)] [search] [file]  

$grep -B[NumberOfLines(n)] [search] [file]  

$grep -C[NumberOfLines(n)] [search] [file]  Example:$grep -A1 learn geekfile.txtOutput:  learn operating system.    
Unix linux which one you choose. 
--
uNix is easy to learn.unix is a multiuser os.Learn unix .unix is a powerful.      

(Prints the searched line along with the next n lines (here n = 1 (A1).)
(Will print each and every occurance of the found line, separating each output by --) 
(Output pattern remains the same for -B and -C respectively)                                                                                                                                       Unix linux which one you choose.                                                                                                                                            --                                                                                                                                                                          uNix is easy to learn.unix is a multiuser os.Learn unix .unix is a powerful.                                                                                                                                                    Unix linux which one you choose.                                                                                                                                            --                                                                                                                                                                          uNix is easy to learn.unix is a multiuser os.Learn unix .unix is a powerful. This article is contributed by Akshay Rajput. If you like GeeksforGeeks and would like to contribute, you can also write an article using write.geeksforgeeks.org or mail your article to contribute@geeksforgeeks.org. See your article appearing on the GeeksforGeeks’ main page and help other Geeks. Please write comments if you find anything incorrect, or you want to share more information about the topic discussed above. My Personal Notes
arrow_drop_upSave $grep â€“f pattern.txt  geekfile.txt12. Print n specific lines from a file:  -A prints the searched line and n lines after the result, -B prints the searched line and n lines before the result, and -C prints the searched line and n lines after and before the result. Syntax:$grep -A[NumberOfLines(n)] [search] [file]  

$grep -B[NumberOfLines(n)] [search] [file]  

$grep -C[NumberOfLines(n)] [search] [file]  Example:$grep -A1 learn geekfile.txtOutput:  learn operating system.    
Unix linux which one you choose. 
--
uNix is easy to learn.unix is a multiuser os.Learn unix .unix is a powerful.      

(Prints the searched line along with the next n lines (here n = 1 (A1).)
(Will print each and every occurance of the found line, separating each output by --) 
(Output pattern remains the same for -B and -C respectively)                                                                                                                                       Unix linux which one you choose.                                                                                                                                            --                                                                                                                                                                          uNix is easy to learn.unix is a multiuser os.Learn unix .unix is a powerful.                                                                                                                                                    Unix linux which one you choose.                                                                                                                                            --                                                                                                                                                                          uNix is easy to learn.unix is a multiuser os.Learn unix .unix is a powerful. This article is contributed by Akshay Rajput. If you like GeeksforGeeks and would like to contribute, you can also write an article using write.geeksforgeeks.org or mail your article to contribute@geeksforgeeks.org. See your article appearing on the GeeksforGeeks’ main page and help other Geeks. Please write comments if you find anything incorrect, or you want to share more information about the topic discussed above. My Personal Notes
arrow_drop_upSave12. Print n specific lines from a file:  -A prints the searched line and n lines after the result, -B prints the searched line and n lines before the result, and -C prints the searched line and n lines after and before the result. Syntax:$grep -A[NumberOfLines(n)] [search] [file]  

$grep -B[NumberOfLines(n)] [search] [file]  

$grep -C[NumberOfLines(n)] [search] [file]  Example:$grep -A1 learn geekfile.txtOutput:  learn operating system.    
Unix linux which one you choose. 
--
uNix is easy to learn.unix is a multiuser os.Learn unix .unix is a powerful.      

(Prints the searched line along with the next n lines (here n = 1 (A1).)
(Will print each and every occurance of the found line, separating each output by --) 
(Output pattern remains the same for -B and -C respectively)                                                                                                                                       Unix linux which one you choose.                                                                                                                                            --                                                                                                                                                                          uNix is easy to learn.unix is a multiuser os.Learn unix .unix is a powerful.                                                                                                                                                    Unix linux which one you choose.                                                                                                                                            --                                                                                                                                                                          uNix is easy to learn.unix is a multiuser os.Learn unix .unix is a powerful. This article is contributed by Akshay Rajput. If you like GeeksforGeeks and would like to contribute, you can also write an article using write.geeksforgeeks.org or mail your article to contribute@geeksforgeeks.org. See your article appearing on the GeeksforGeeks’ main page and help other Geeks. Please write comments if you find anything incorrect, or you want to share more information about the topic discussed above. My Personal Notes
arrow_drop_upSaveSyntax:$grep -A[NumberOfLines(n)] [search] [file]  

$grep -B[NumberOfLines(n)] [search] [file]  

$grep -C[NumberOfLines(n)] [search] [file]  Example:$grep -A1 learn geekfile.txtOutput:  learn operating system.    
Unix linux which one you choose. 
--
uNix is easy to learn.unix is a multiuser os.Learn unix .unix is a powerful.      

(Prints the searched line along with the next n lines (here n = 1 (A1).)
(Will print each and every occurance of the found line, separating each output by --) 
(Output pattern remains the same for -B and -C respectively)                                                                                                                                       Unix linux which one you choose.                                                                                                                                            --                                                                                                                                                                          uNix is easy to learn.unix is a multiuser os.Learn unix .unix is a powerful.                                                                                                                                                    Unix linux which one you choose.                                                                                                                                            --                                                                                                                                                                          uNix is easy to learn.unix is a multiuser os.Learn unix .unix is a powerful. This article is contributed by Akshay Rajput. If you like GeeksforGeeks and would like to contribute, you can also write an article using write.geeksforgeeks.org or mail your article to contribute@geeksforgeeks.org. See your article appearing on the GeeksforGeeks’ main page and help other Geeks. Please write comments if you find anything incorrect, or you want to share more information about the topic discussed above. My Personal Notes
arrow_drop_upSaveExample:$grep -A1 learn geekfile.txtOutput:  learn operating system.    
Unix linux which one you choose. 
--
uNix is easy to learn.unix is a multiuser os.Learn unix .unix is a powerful.      

(Prints the searched line along with the next n lines (here n = 1 (A1).)
(Will print each and every occurance of the found line, separating each output by --) 
(Output pattern remains the same for -B and -C respectively)                                                                                                                                       Unix linux which one you choose.                                                                                                                                            --                                                                                                                                                                          uNix is easy to learn.unix is a multiuser os.Learn unix .unix is a powerful.                                                                                                                                                    Unix linux which one you choose.                                                                                                                                            --                                                                                                                                                                          uNix is easy to learn.unix is a multiuser os.Learn unix .unix is a powerful. This article is contributed by Akshay Rajput. If you like GeeksforGeeks and would like to contribute, you can also write an article using write.geeksforgeeks.org or mail your article to contribute@geeksforgeeks.org. See your article appearing on the GeeksforGeeks’ main page and help other Geeks. Please write comments if you find anything incorrect, or you want to share more information about the topic discussed above. My Personal Notes
arrow_drop_upSaveOutput:  learn operating system.    
Unix linux which one you choose. 
--
uNix is easy to learn.unix is a multiuser os.Learn unix .unix is a powerful.      

(Prints the searched line along with the next n lines (here n = 1 (A1).)
(Will print each and every occurance of the found line, separating each output by --) 
(Output pattern remains the same for -B and -C respectively)                                                                                                                                       Unix linux which one you choose.                                                                                                                                            --                                                                                                                                                                          uNix is easy to learn.unix is a multiuser os.Learn unix .unix is a powerful.                                                                                                                                                    Unix linux which one you choose.                                                                                                                                            --                                                                                                                                                                          uNix is easy to learn.unix is a multiuser os.Learn unix .unix is a powerful. This article is contributed by Akshay Rajput. If you like GeeksforGeeks and would like to contribute, you can also write an article using write.geeksforgeeks.org or mail your article to contribute@geeksforgeeks.org. See your article appearing on the GeeksforGeeks’ main page and help other Geeks. Please write comments if you find anything incorrect, or you want to share more information about the topic discussed above. My Personal Notes
arrow_drop_upSave This article is contributed by Akshay Rajput. If you like GeeksforGeeks and would like to contribute, you can also write an article using write.geeksforgeeks.org or mail your article to contribute@geeksforgeeks.org. See your article appearing on the GeeksforGeeks’ main page and help other Geeks. Please write comments if you find anything incorrect, or you want to share more information about the topic discussed above. My Personal Notes
arrow_drop_upSavePlease write comments if you find anything incorrect, or you want to share more information about the topic discussed above. My Personal Notes
arrow_drop_upSaveWriting code in comment?
Please use ide.geeksforgeeks.org,
generate link and share the link here.